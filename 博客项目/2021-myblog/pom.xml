<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

   <!-- 三者组织成一个唯一标识-->
    <groupId>org.example</groupId>  <!--组织id-apache 公司名-->
    <artifactId>2021-myblog</artifactId> <!-- 产品名-->
    <version>1.0-SNAPSHOT</version>  <!-- 版本号-->
    <packaging>war</packaging>  <!--默认是jar包-->


    <!--告诉maven 项目我的的代码要用什么jdk的版本就行编译-->

   <properties>
           <maven.compiler.source>1.8</maven.compiler.source>  <!-- 默认情况下，maven 会使用 1.5 版本进行代码检查，一般我们都修改为 1.8 -->
           <maven.compiler.target>1.8</maven.compiler.target>
   </properties>



    <!--配置依赖包--> <!--写好之后会在右侧的maven里面的dependencies里面出现--> <!--要刷新才能生效-->
    <dependencies>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.49</version>
        </dependency>

        <!--配置servlet 的依赖包  这个版本号是用匹配关系的 兼容格式-->
        <!--tomcat的官网 which version里面有每一个tomcat 版本对应的servelt版本-->
        <!--对应关系 https://tomcat.apache.org/whichversion.html-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>



        <!--jackson databind: 数据绑定包，提供Java对象与JSON数据格式进行序列化
                   及反序列化的支持 -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.11.3</version>
        </dependency>

        <!-- JUnit: java的一种测试框架 -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>

        <!-- Lombok: 自动插入编辑器并构建工具，以注解的方式，简化一些模版代码的编写，
                   如getter/setter方法、equals/hashcode方法、toString方法等-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.8</version>
            <scope>provided</scope>
        </dependency>

        <!-- 百度UEditor富文本编辑器 -->
        <dependency>
            <groupId>com.blingblingbang</groupId>
            <artifactId>ueditor</artifactId>
            <version>1.1.2</version>
        </dependency>

    </dependencies>

    <!--构建过程中-->
    <build>
        <!-- 打包后的包名 （和我们部署的项目名一致 或者改成应用上下文路径都可）-->
        <finalName>2021MyBlog</finalName>
    </build>


</project>